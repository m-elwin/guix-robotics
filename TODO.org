* List
0. Native inputs, inputs, propagated inputs
1. Native inputs: used only during build time
2. Inputs, used during build time and during runtime, but not by dependencies
3. Propagated-inputs: used by dependencies during runtime (should be minimized)
   - Examples:
     If python library A uses another python library B, B should be propagated input from A
     If C++ library A uses C++ library B: If users of A also need B, then B is propagated. If they don't it's an input
-> Working on implementing this module by module.
So far
[x] core
[x] contributed
[x] bootstrap
[x] roscpp-core
[ ] metapackages
[ ] ros-comm
[ ] ros
[ ] common-msgs
- Note: lint and style every package. Check inputs, then build the package.


- Test if the following
  guix shell -D ros-noetic-ros-core to allow building a catkin workspace
  1. In container mode, when emulating the root FHS
  1. In container mode, without emulating the root fhs
  2. In pure mode
  3. On an ubuntu system with ROS 2 installed without pure mode.
Note: catkin itself can be compiled but can't be used in non container mode, because
the downloaded ersion is not patched for guix



0. Some packages are not working as expected. Likely due to mix ups with proper dependencies.

1. ros-noetic-pluginlib tests are failing. Likely related to paths with rospack.
   - need to get these paths working better
   - do a guix shell -D ros-noetic-pluginlib to get the dev environment

2. Documentation: ros has it's own documentation system, could
   export that as a :doc part of split packages for each ROS package

3. Cleanup:
   Make a better package structure:
   ros-noetic/

   Then there will be 1 .scm file per repo that
   has many packages so the .scm files will
   map onto meta packages or packages that
   stand on their own. It would help keep track of ros meta packages

4. Can we change the prefix?
      CMAKE_INSTALL_PREFIX is only part of it. The problem is the prefix for python packages
      cannot be changed (easily) in guix as far as I know since it messes with GUIX_PATH
      - so far there are no naming conflicts so have not needed to put everything under a separate sub-directory
5. Add more packages.

* Notes
1. when using catkin_make_isolated within something that is not a container it is necessary to specify -DPYTHON_EXECUTABLE=$(which python) so that the guix python is found
